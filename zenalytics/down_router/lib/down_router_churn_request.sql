
alter session set QUOTED_IDENTIFIERS_IGNORE_CASE = false;

-----------------------------------------------------------------------
--------------------- Churn Request          --------------------------
-----------------------------------------------------------------------

use warehouse &{whname};
use role &{rolename};
--use schema &{schemaname};

truncate table &{dbname}._staging.Down_Router_Churn_Request;

insert into &{dbname}._staging.DOWN_ROUTER_CHURN_REQUEST
SELECT
REQ.ID AS SFDC_CHURN_REQ_ID,
REQ.CREATEDDATE AS CHURN_REQ_DATE,
USERS.NAME AS CREATED_BY,
REQ.CHURN_STATUS__C,
REQ.ACCOUNT_MRR__C,
REQ.UNCOVERED_BY_PROGRAMMATIC_OUTREACH__C,
REQ.UNCOVERED_BY_LOCAL_ADS__C,
REQ.UNABLE_TO_REACH__C,
REQ.NO_REASON_GIVEN__C,
REQ.EARLY_TERMINATION__C,
REQ.REASON_FOR_EARLY_TERMINATION__C,
REQ.CHURN_REASON__C,
REQ.CHURN_REASON_BUSINESS_SITUATION__C,
REQ.CHURN_REASON_TECHNICAL__C,
REQ.CHURN_REASON_SERVICE__C,
REQ.CHURN_REASON_CONTRACT_BILLING__C,
REQ.CHURN_REASON_PRODUCT__C,
REQ.CHURN_REASON_DETAILS__C,
REQ.MARKETING_PLATFORMS__C,
REQ.OTHER_MARKETING_PLATFORMS__C,
REQ.CONTACT_EMAIL_ADDRESS__C,
REQ.NUMBER_OF_LOCATIONS__C,
REQ.OPEN_TO_REACTIVATION__C,
REQ.ESCALATED__C,
CASE
  WHEN AMS_LOC_1.LOCATION_ID IS NOT NULL THEN AMS_LOC_1.LOCATION_ID
  WHEN AMS_LOC_2.LOCATION_ID IS NOT NULL THEN AMS_LOC_2.LOCATION_ID
  WHEN AMS_LOC_3.LOCATION_ID IS NOT NULL THEN AMS_LOC_3.LOCATION_ID
  WHEN AMS_LOC_4.LOCATION_ID IS NOT NULL THEN AMS_LOC_4.LOCATION_ID
  WHEN AMS_LOC_5.LOCATION_ID IS NOT NULL THEN AMS_LOC_5.LOCATION_ID
  ELSE NULL END AS LOCATION_ID,
'&{asof_date}'::date as ASOF_DATE
FROM ZENALYTICS.SFDC.CHURN_REQUEST__C REQ
LEFT JOIN ZENALYTICS.SFDC.USER USERS
  ON REQ.CREATEDBYID = USERS.ID
LEFT JOIN ZENALYTICS.SFDC_LOCATIONS.CHURN_REQUEST_LOCATIONS__C REQ_LOC
  ON REQ.ID = REQ_LOC.CHURN_REQUEST__C
    LEFT JOIN ZENALYTICS.AMS.LOCATION AMS_LOC_1
      ON AMS_LOC_1.SALESFORCE_ID = REQ_LOC.LOCATION__C
      AND REQ_LOC.LOCATION__C IS NOT NULL
    LEFT JOIN ZENALYTICS.AMS.ACCOUNT AMS_ACCT
      ON AMS_ACCT.SALESFORCE_ID = REQ.ACCOUNT__C
      AND REQ_LOC.LOCATION__C IS NULL
        LEFT JOIN ZENALYTICS.AMS.LOCATION AMS_LOC_2
          ON AMS_LOC_2.ACCOUNT_ID = AMS_ACCT.ACCOUNT_ID
          AND REQ_LOC.LOCATION__C IS NULL
          AND AMS_ACCT.ACCOUNT_ID IS NOT NULL
        LEFT JOIN ZENALYTICS.SFDC.ACCOUNT SFDC_ACCT
          ON REQ.ACCOUNT__C = SFDC_ACCT.ID
          AND REQ_LOC.LOCATION__C IS NULL
          AND AMS_ACCT.ACCOUNT_ID IS NULL
        LEFT JOIN ZENALYTICS.SFDC.ACCOUNT SFDC_ACCT_2
          ON SFDC_ACCT_2.ID = SFDC_ACCT.PARENTID
          AND REQ_LOC.LOCATION__C IS NULL
          AND AMS_ACCT.ACCOUNT_ID IS NULL
          LEFT JOIN ZENALYTICS.AMS.ACCOUNT AMS_ACCT_2
            ON AMS_ACCT_2.SALESFORCE_ID = SFDC_ACCT_2.ID
            AND REQ_LOC.LOCATION__C IS NULL
            AND AMS_ACCT.ACCOUNT_ID IS NULL
            AND SFDC_ACCT_2.PARENTID IS NOT NULL
            LEFT JOIN ZENALYTICS.AMS.LOCATION AMS_LOC_3
                  ON AMS_LOC_3.ACCOUNT_ID = AMS_ACCT_2.ACCOUNT_ID
                  AND REQ_LOC.LOCATION__C IS NULL
                  AND AMS_ACCT.ACCOUNT_ID IS NULL
                  AND SFDC_ACCT_2.PARENTID IS NOT NULL
                  AND AMS_ACCT_2.ACCOUNT_ID IS NOT NULL
                  LEFT JOIN ZENALYTICS.SFDC_LOCATIONS.LOCATION__C SFDC_LOC
                  ON SFDC_LOC.ACCOUNT__C = REQ.ACCOUNT__C
                  AND AMS_LOC_1.LOCATION_ID IS NULL
                  AND AMS_LOC_2.LOCATION_ID IS NULL
                  AND AMS_LOC_3.LOCATION_ID IS NULL
                      LEFT JOIN ZENALYTICS.AMS.LOCATION AMS_LOC_4
                        ON SFDC_LOC.ID = AMS_LOC_4.SALESFORCE_ID
                        AND AMS_LOC_1.LOCATION_ID IS NULL
                        AND AMS_LOC_2.LOCATION_ID IS NULL
                        AND AMS_LOC_3.LOCATION_ID IS NULL
                        AND SFDC_LOC.ID IS NOT NULL
                      LEFT JOIN ZENALYTICS.SFDC_LOCATIONS.LOCATION__C SFDC_LOC_2
                        ON SFDC_LOC_2.ACCOUNT__C = SFDC_ACCT.PARENTID
                        AND AMS_LOC_1.LOCATION_ID IS NULL
                        AND AMS_LOC_2.LOCATION_ID IS NULL
                        AND AMS_LOC_3.LOCATION_ID IS NULL
                        AND AMS_LOC_4.LOCATION_ID IS NULL
                            LEFT JOIN ZENALYTICS.AMS.LOCATION AMS_LOC_5
                              ON SFDC_LOC_2.ID = AMS_LOC_5.SALESFORCE_ID
                              AND AMS_LOC_1.LOCATION_ID IS NULL
                              AND AMS_LOC_2.LOCATION_ID IS NULL
                              AND AMS_LOC_3.LOCATION_ID IS NULL
                              AND AMS_LOC_4.LOCATION_ID IS NULL
                              AND SFDC_LOC_2.ID IS NOT NULL;

alter table &{dbname}._STAGING.down_router_churn_request swap with &{dbname}.&{schemaname}.down_router_churn_request;

